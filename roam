#!/bin/bash

if [ "$HOME" = '' ]; then
  echo '$HOME is empty, cannot continue.'
  exit 1
fi

echo Using $HOME as home directory...

PWD=$(pwd)
CONTAINER_HOME=/home/$USER
WORK_DIR=${PWD/$HOME/$CONTAINER_HOME}

# Gather all folders in the home directory to mount as volumes

VOLUMES=""

for d in $HOME/*/
  do 
    dir=${d%*/}
    VOLUMES+=" -v ${d%*/}:$CONTAINER_HOME/${dir##*/}"
done

# Create a pipe for sending commands back to the host using `remote`

PIPE_ID=$RANDOM
PIPE_PATH=$HOME/.roaming-pipe-$RANDOM

mkfifo $PIPE_PATH

while true; do eval "$(cat $PIPE_PATH)"; done &

LOOP_PID=$!

echo "Using roaming pipe: $PIPE_PATH"

USER_MAP=""

if [[ "$OSTYPE" == "darwin"* ]]; then
  USER_MAP="--user 1000"
fi

echo Using $WORK_DIR as working directory

NAME=$2

if [[ -z "$NAME" ]]; then
  NAME=$USER\_dev
fi

EXISTS=no

if [[ `docker ps -a | grep "$NAME"` ]]; then 
  EXISTS=yes
fi

if [[ "$1" = 'init' ]]; then

  mkdir -p \
    $HOME/.azure \
    $HOME/.config/nvim \
    $HOME/.kube \
    $HOME/.roaming-home \
    $HOME/.ssh

  echo 'Run "p10k configure" to alter zsh prompt settings'
  echo 'Run "cp -r .cache .oh-my-zsh .p10k.zsh .profile .zshrc .roaming-home" to persist those settings for subsequent runs'

  eval "docker run -it --rm -w $WORK_DIR \
    -v /etc/timezone:/etc/timezone:ro \
    -v /etc/localtime:/etc/localtime:ro \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v $HOME:$CONTAINER_HOME/.home \
    -v $HOME/.azure:$CONTAINER_HOME/.azure \
    -v $HOME/.kube:$CONTAINER_HOME/.kube \
    -v $HOME/.roaming-home:$CONTAINER_HOME/.roaming-home \
    -v $HOME/.ssh:$CONTAINER_HOME/.ssh \
    $VOLUMES \
    $USER_MAP \
    $2 \
    roaming-terminal:$USER"

  exit

elif [[ "$1" = 'join' ]]; then

  eval "docker exec -it $NAME zsh"

  exit

elif [[ "$1" = 'start' ]]; then

  if [[ "$EXISTS" = 'yes' ]]; then 
    eval "docker start -i $NAME"
  else
    eval "docker run -it -w $WORK_DIR \
      --name $NAME \
      -v $PIPE_PATH:$CONTAINER_HOME/.roaming-pipe \
      -v /etc/timezone:/etc/timezone:ro \
      -v /etc/localtime:/etc/localtime:ro \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -v $HOME:$CONTAINER_HOME/.home \
      -v $HOME/.azure:$CONTAINER_HOME/.azure \
      -v $HOME/.kube:$CONTAINER_HOME/.kube \
      -v $HOME/.roaming-home/.cache:$CONTAINER_HOME/.cache \
      -v $HOME/.roaming-home/.oh-my-zsh:$CONTAINER_HOME/.oh-my-zsh \
      -v $HOME/.roaming-home/.p10k.zsh:$CONTAINER_HOME/.p10k.zsh \
      -v $HOME/.roaming-home/.profile:$CONTAINER_HOME/.profile \
      -v $HOME/.roaming-home/.zshrc:$CONTAINER_HOME/.zshrc \
      -v $HOME/.ssh:$CONTAINER_HOME/.ssh \
      -d \
      $VOLUMES \
      $USER_MAP \
      roaming-terminal:$USER"
  fi

  exit

elif [[ "$1" = 'stop' ]]; then

  if [[ "$EXISTS" = 'yes' ]]; then 
    eval "docker rm -f $NAME"
  fi

else

  echo "Volumes being mapped: " $VOLUMES

  eval "docker run -it -w $WORK_DIR \
    --name $NAME \
    -v $PIPE_PATH:$CONTAINER_HOME/.roaming-pipe \
    -v /etc/timezone:/etc/timezone:ro \
    -v /etc/localtime:/etc/localtime:ro \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v $HOME:$CONTAINER_HOME/.home \
    -v $HOME/.azure:$CONTAINER_HOME/.azure \
    -v $HOME/.kube:$CONTAINER_HOME/.kube \
    -v $HOME/.roaming-home/.cache:$CONTAINER_HOME/.cache \
    -v $HOME/.roaming-home/.oh-my-zsh:$CONTAINER_HOME/.oh-my-zsh \
    -v $HOME/.roaming-home/.p10k.zsh:$CONTAINER_HOME/.p10k.zsh \
    -v $HOME/.roaming-home/.profile:$CONTAINER_HOME/.profile \
    -v $HOME/.roaming-home/.zshrc:$CONTAINER_HOME/.zshrc \
    -v $HOME/.ssh:$CONTAINER_HOME/.ssh \
    -d \
    $VOLUMES \
    $USER_MAP \
    $1 \
    roaming-terminal:$USER"

    #-v $HOME/.local:$CONTAINER_HOME/.local \
fi

kill $LOOP_PID

rm $PIPE_PATH
